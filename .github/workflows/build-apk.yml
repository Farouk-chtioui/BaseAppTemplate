name: Build APK

# Trigger workflow manually and accept appName as an input
on:
  workflow_dispatch:
    inputs:
      appName:
        description: 'App Name'
        required: true
        default: 'TemplateApp'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Java Development Kit (JDK) version 11
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    # Step 3: Install project dependencies (this will also compile the code)
    - name: Install dependencies
      run: ./gradlew build

    # Step 4: Build the APK file (this creates the APK)
    - name: Build APK
      run: ./gradlew assembleRelease

    # Step 5: Create a GitHub release
    # This must be done BEFORE uploading the APK so that we get the upload_url to attach assets to the release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.appName }}-${{ github.run_id }}
        release_name: ${{ github.event.inputs.appName }} Release
        draft: false
        prerelease: false

    # Step 6: Upload the APK file to the release as an asset
    - name: Upload APK as Release Asset
      id: upload-apk
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: ${{ github.event.inputs.appName }}-release.apk
        asset_content_type: application/vnd.android.package-archive
